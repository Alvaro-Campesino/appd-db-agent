# Default values for appdynamics-db-agent.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


# -- Configure the main properties for the agent
properties:
  appdAgentAccountName: ""
  appdControllerHostname: ""
  appdControllerPort: "443"
  appdControllerSslEnabled: "true"
  appdDatabaseAgentName: "K8s-DB-Agent"


# -- Configure the image
image:
  repository: appdynamics/db-agent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 22.3.0
  pullPolicy: IfNotPresent

imagePullSecrets: []
replicas: 1

# If you want to override de deployment or chart name, currently: "appdynamics-db-agent"
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""



podAnnotations: {}
podLabels:
  {}
# app: appdynamics-db-agent
podEnv:
  # a default port must be set. required by container
  - name: "UPTIME_KUMA_PORT"
    value: "3001"

podSecurityContext:
  {}
# fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000


resources:
  {}
  # Adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  enabled: true
  timeoutSeconds: 2
  initialDelaySeconds: 15

readinessProbe:
  enabled: true
  initialDelaySeconds: 5

logs:
  ##
  persistance:
    # If you want to store logs in a persistent storage set this to tru
    enabled: false
    # If you want to use a storage class other than the default, uncomment this
    # line and define the storage class name
    # storageClass:
    # Reuse your own pre-existing PVC.
    existingClaim: ""

volume:
  enabled: true
  accessMode: ReadWriteOnce
  size: 4Gi
  # If you want to use a storage class other than the default, uncomment this
  # line and define the storage class name
  # storageClassName:
  # Reuse your own pre-existing PVC.
  existingClaim: ""

restartPolicy: Always
dnsPolicy: ClusterFirst
# -- A list of additional volumes to be added to the pod
additionalVolumes:
  []
  # - name: "additional-certificates"
  #   configMap:
  #     name: "additional-certificates"
  #     optional: true
#     defaultMode: 420

# -- A list of additional volumeMounts to be added to the pod
additionalVolumeMounts:
  []
  # - name: "additional-certificates"
  #   mountPath: "/etc/ssl/certs/additional/additional-ca.pem"
  #   readOnly: true
#   subPath: "additional-ca.pem"

strategy:
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%
  type: RollingUpdate

# Prometheus ServiceMonitor configuration
serviceMonitor:
  enabled: false
  # -- Scrape interval. If not set, the Prometheus default scrape interval is used.
  interval: 60s
  # -- Timeout if metrics can't be retrieved in given time interval
  scrapeTimeout: 10s
  # -- Scheme to use when scraping, e.g. http (default) or https.
  scheme: ~
  # -- TLS configuration to use when scraping, only applicable for scheme https.
  tlsConfig: {}
  # -- Prometheus [RelabelConfigs] to apply to samples before scraping
  relabelings: []
  # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion
  metricRelabelings: []
  # -- Prometheus ServiceMonitor selector, only select Prometheus's with these
  # labels (if not set, select any Prometheus)
  selector: {}

  # -- Namespace where the ServiceMonitor resource should be created, default is
  # the same as the release namespace
  namespace: ~
  # -- Additional labels to add to the ServiceMonitor
  additionalLabels: {}
  # -- Additional annotations to add to the ServiceMonitor
  annotations: {}

  # -- BasicAuth credentials for scraping metrics, use API token and any string for username
  # basicAuth:
  #   username: "metrics"
  #   password: ""

# -- Use this option to set a custom DNS policy to the created deployment
dnsPolicy: ""

# -- Use this option to set custom DNS configurations to the created deployment
dnsConfig: {}

# -- Configure your the log level of the agent
log:
  level: "info"
